#
# Copyright Â© 2016-2025 The Thingsboard Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

services:
  zookeeper:
    restart: always
    image: "zookeeper:3.8.0"
    ports:
      - "2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zookeeper:2888:3888;zookeeper:2181
      ZOO_ADMINSERVER_ENABLED: "false"
  kafka:
    restart: always
    image: "bitnamilegacy/kafka:3.8.1"
    ports:
      - "9092"
    environment:
      KAFKA_CFG_ADVERTISED_LISTENERS: "INSIDE://:9094,OUTSIDE://kafka:9092"
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "0@kafka:9093"
    env_file:
      - kafka.env
    depends_on:
      - zookeeper
  tb-edge1:
    restart: always
    image: "${DOCKER_REPO}/${TB_EDGE_DOCKER_NAME}:${TB_EDGE_VERSION}"
    ports:
      - "8080"
      - "1883"
    logging:
      driver: "json-file"
      options:
        max-size: "200m"
        max-file: "30"
    environment:
      TB_SERVICE_ID: tb-edge1
      TB_SERVICE_TYPE: monolith
      JAVA_OPTS: "${JAVA_OPTS}"
      CLOUD_ROUTING_KEY: "${CLOUD_ROUTING_KEY}"
      CLOUD_ROUTING_SECRET: "${CLOUD_ROUTING_SECRET}"
      CLOUD_RPC_HOST: "${CLOUD_RPC_HOST}"
      CLOUD_RPC_PORT: "${CLOUD_RPC_PORT}"
    env_file:
      - tb-edge.env
    volumes:
      - ./tb-edge/conf:/config
      - ./tb-edge/log:/var/log/tb-edge
    depends_on:
      - zookeeper
      - kafka
  tb-edge2:
    restart: always
    image: "${DOCKER_REPO}/${TB_EDGE_DOCKER_NAME}:${TB_EDGE_VERSION}"
    ports:
      - "8080"
      - "1883"
    logging:
      driver: "json-file"
      options:
        max-size: "200m"
        max-file: "30"
    environment:
      TB_SERVICE_ID: tb-edge2
      TB_SERVICE_TYPE: monolith
      JAVA_OPTS: "${JAVA_OPTS}"
      CLOUD_ROUTING_KEY: "${CLOUD_ROUTING_KEY}"
      CLOUD_ROUTING_SECRET: "${CLOUD_ROUTING_SECRET}"
      CLOUD_RPC_HOST: "${CLOUD_RPC_HOST}"
      CLOUD_RPC_PORT: "${CLOUD_RPC_PORT}"
    env_file:
      - tb-edge.env
    volumes:
      - ./tb-edge/conf:/config
      - ./tb-edge/log:/var/log/tb-edge
    depends_on:
      - zookeeper
      - kafka
  tb-edge3:
    restart: always
    image: "${DOCKER_REPO}/${TB_EDGE_DOCKER_NAME}:${TB_EDGE_VERSION}"
    ports:
      - "8080"
      - "1883"
    logging:
      driver: "json-file"
      options:
        max-size: "200m"
        max-file: "30"
    environment:
      TB_SERVICE_ID: tb-edge3
      TB_SERVICE_TYPE: monolith
      JAVA_OPTS: "${JAVA_OPTS}"
      CLOUD_ROUTING_KEY: "${CLOUD_ROUTING_KEY}"
      CLOUD_ROUTING_SECRET: "${CLOUD_ROUTING_SECRET}"
      CLOUD_RPC_HOST: "${CLOUD_RPC_HOST}"
      CLOUD_RPC_PORT: "${CLOUD_RPC_PORT}"
    env_file:
      - tb-edge.env
    volumes:
      - ./tb-edge/conf:/config
      - ./tb-edge/log:/var/log/tb-edge
    depends_on:
      - zookeeper
      - kafka
  haproxy:
    restart: always
    container_name: "${LOAD_BALANCER_NAME}"
    image: thingsboard/haproxy-certbot:2.2.33-alpine
    volumes:
     - ./haproxy/config:/config
     - ./haproxy/letsencrypt:/etc/letsencrypt
     - ./haproxy/certs.d:/usr/local/etc/haproxy/certs.d
    ports:
     - "80:80"
     - "443:443"
     - "1883:1883"
     - "7070:7070"
     - "9999:9999"
    cap_add:
     - NET_ADMIN
    environment:
      HTTP_PORT: 80
      HTTPS_PORT: 443
      MQTT_PORT: 1883
      FORCE_HTTPS_REDIRECT: "false"
    links:
      - tb-edge1
      - tb-edge2
      - tb-edge3